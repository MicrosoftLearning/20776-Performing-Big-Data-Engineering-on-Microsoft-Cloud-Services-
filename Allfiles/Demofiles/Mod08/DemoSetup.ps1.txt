# Define variables
$resourceGroupName = "StocksRG"
$location = "<location>"
$dataLakeStoreName = "adls<your name><date>"
$eventHubNamespace = "stockmarket<your name><date>"
$eventHubName = "StockMarketHub"
$consumerGroupName = "stockmarket"
$storageAccountName = "stocks<your name><date>"
$storageContainerName = "stocks"
$streamAnalyticsJobName = "StockMarketProcessor"
$sqlServerName = "stockdbs<your name><date>"
$sqlServerUserName = "student"
$sqlDatabaseName = "StockDBW"

# Log in to Azure
Login-AzureRmAccount

# Register the Azure Data Lake Store provider
Register-AzureRmResourceProvider -ProviderNamespace "Microsoft.DataLakeStore"

# Create a new Resource Group
New-AzureRmResourceGroup -Location $location -Name $resourceGroupName

# Create a new Data Lake Store Account
New-AzureRmDataLakeStoreAccount -ResourceGroupName $resourceGroupName -Name $dataLakeStoreName -Location $location

# Create a new Event Hub namespace
New-AzureRmEventHubNamespace -Location $location -NamespaceName $eventHubNamespace -ResourceGroupName $resourceGroupName -SkuCapacity 2 -SkuName Standard

# Create a new Event Hub
New-AzureRmEventHub -Location $location -EventHubName $eventHubName -NamespaceName $eventHubNamespace -ResourceGroupName $resourceGroupName -MessageRetentionInDays 1 -PartitionCount 16

# Create a new Consumer Group
New-AzureRmEventHubConsumerGroup -EventHubName $eventHubName -ConsumerGroupName $consumerGroupName -NamespaceName $eventHubNamespace -ResourceGroupName $resourceGroupName

# Get Event Hub namespace primary connection string
$primaryKey = Get-AzureRmEventHubNamespaceKey -ResourceGroupName $resourceGroupName -NamespaceName $eventHubNamespace -AuthorizationRuleName RootManageSharedAccessKey

# Create a new Blob storage account
New-AzureRmStorageAccount -Location $location -Name $storageAccountName -ResourceGroupName $resourceGroupName -SkuName Standard_RAGRS

# Get storage account authentication keys
$keys = Get-AzureRmStorageAccountKey -ResourceGroupName $resourceGroupName -Name $storageAccountName

# Create a storage authentication context
$storageContext = New-AzureStorageContext -StorageAccountName $storageAccountName -StorageAccountKey $keys[0].Value

# Create a new Blob container in the storage account
New-AzureStorageContainer -Context $storageContext -Name $storageContainerName

# Display the key values:
Write-Host "`r`n`r`n`r`n`r`n`r`n`r`nThe Event Hub namespace primary key value is:" -ForegroundColor Green
$primaryKey[0].PrimaryKey
Write-Host "`r`nThe Storage account key1 value is:" -ForegroundColor Red
$keys[0].Value

# Create a new Stream Analytics job
New-AzureRmStreamAnalyticsJob -File E:\Demofiles\Mod08\DemoSetup.json -ResourceGroupName $resourceGroupName -Name $streamAnalyticsJobName

# Create SQL Server credentials
$sqlCredentials = Get-Credential -Message "Enter new admin password" -UserName $sqlServerUserName

# Create a new Azure SQL Server
New-AzureRmSqlServer -Location $location -ResourceGroupName $resourceGroupName -ServerName $sqlServerName -SqlAdministratorCredentials $sqlCredentials

# Set firewall rules for the Azure SQL Server
$localIP = (Invoke-WebRequest ifconfig.me/ip).Content.trim()
New-AzureRmSqlServerFirewallRule -ResourceGroupName $resourceGroupName -ServerName $sqlServerName -FirewallRuleName 'msffirewall' -StartIpAddress $localIP -EndIpAddress $localIP
New-AzureRmSqlServerFirewallRule -ResourceGroupName $resourceGroupName -ServerName $sqlServerName -AllowAllAzureIPs

# Create a new Azure SQL Data Warehouse database
New-AzureRmSqlDatabase -RequestedServiceObjectiveName "DW100" -DatabaseName $sqlDatabaseName -ServerName $sqlServerName -ResourceGroupName $resourceGroupName -Edition "DataWarehouse"

#Pause the DW
Suspend-AzureRmSqlDatabase -DatabaseName $sqlDatabaseName -ResourceGroupName $resourceGroupName -ServerName $sqlServerName